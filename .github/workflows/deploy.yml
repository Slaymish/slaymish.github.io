# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch (usually 'main' or 'master')
  push:
    branches: ["main"] # Change to 'master' if that's your default branch

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Pandoc and other apt packages
        uses: actions/cache@v4
        with:
          path: |
            /var/cache/apt/archives
            /var/lib/apt/lists
          key: ${{ runner.os }}-apt-pandoc-${{ hashFiles('**/lockfiles') }} # Fallback key, consider more specific if needed
          restore-keys: |
            ${{ runner.os }}-apt-pandoc-

      - name: Set up Pandoc and Perl
        run: |
          sudo apt-get update
          # Install pandoc. Perl is usually pre-installed on ubuntu-latest.
          # If Perl were missing, add: sudo apt-get install -y perl
          sudo apt-get install -y pandoc
      - name: Make build script executable
        run: chmod +x ./build.sh
      - name: Build Site
        run: ./build.sh # Execute your build script
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire directory
          path: './_site' # Make sure this matches OUTPUT_DIR in build.sh
      - name: Check directory contents # Optional: for debugging
        run: ls -R ./_site

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

